version: "3.8"
services:
  postgres:
    image: postgres:latest
    restart: always
    volumes:
    - db_data:/var/lib/postgresql/data
    ports:
    - 5432:5432
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?Postgres password needs to be set in .env file!}
  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    depends_on:
    - postgres
    ports:
    - 5050:80
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:?pgAdmin user name needs to be set in .env file!}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:?pgAdmin password needs to be set in .env file!}
  graphql-engine:
    image: hasura/graphql-engine:latest.cli-migrations-v3
    volumes:
      - ./model/hasura/migrations:/hasura-migrations
      - ./model/hasura/metadata:/hasura-metadata
    ports:
    - 8080:8080
    depends_on:
    - postgres
    restart: always
    environment:
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/postgres
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/postgres
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET:?Hasura admin secret needs to be set in .env file!}
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: "guest"
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
  webapp:
    build: ./view
    volumes:
      - ./view/:/app
    ports:
      - 3000:3000
    restart: always
    environment:
      REACT_APP_GRAPHQL_ENDPOINT: ${REACT_APP_GRAPHQL_ENDPOINT:?GraphQL endpoint needs to be set in .env file!}
    command: npm start
  caddy:
    image: caddy/caddy:latest
    depends_on:
    - pgadmin
    - graphql-engine
    - webapp
    restart: always
    ports:
    - 80:80
    - 443:443
    volumes:
    - ./Caddyfile:/etc/caddy/Caddyfile
    - caddy_data:/data
volumes:
  db_data:
  caddy_data:
